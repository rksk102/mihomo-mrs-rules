name: "Check MRS links (manual)"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Ref to check (branch/tag), default main"
        required: false
        type: string
      validate_mode:
        description: "Check which links: both/jsdelivr/raw"
        required: true
        default: "both"
        type: choice
        options: ["both", "jsdelivr", "raw"]
      check_timeout:
        description: "Per-link timeout (seconds)"
        required: false
        default: "6"
        type: string
      check_retries:
        description: "Per-link retries"
        required: false
        default: "0"
        type: string
      parallel:
        description: "Parallel workers"
        required: false
        default: "8"
        type: string
      output_file:
        description: "Output file name"
        required: false
        default: "LINKS_CHECK.md"
        type: string

permissions:
  contents: write

concurrency:
  group: check-links
  cancel-in-progress: true

env:
  TZ: Asia/Shanghai

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history for rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'actions@github.com'

      - name: Make checker executable
        run: chmod +x scripts/check-links.sh

      - name: Run links check
        env:
          INPUT_REF: ${{ inputs.ref || 'main' }}
          INPUT_VALIDATE: ${{ inputs.validate_mode || 'both' }}
          INPUT_CHECK_TIMEOUT: ${{ inputs.check_timeout || '6' }}
          INPUT_CHECK_RETRIES: ${{ inputs.check_retries || '0' }}
          INPUT_PARALLEL: ${{ inputs.parallel || '8' }}
          INPUT_OUTPUT_FILE: ${{ inputs.output_file || 'LINKS_CHECK.md' }}
        run: scripts/check-links.sh

      - name: Commit report
        shell: bash
        run: |
          set -euo pipefail
          OUT="${{ inputs.output_file || 'LINKS_CHECK.md' }}"
          if git diff --quiet "$OUT"; then
            echo "No report changes."
            exit 0
          fi
          git add "$OUT"
          git commit -m "chore(report): update ${OUT} at $(date +'%Y-%m-%d %H:%M:%S %Z')"
          # rebase + push
          BRANCH="${GITHUB_REF_NAME:-main}"
          if git push origin "$BRANCH"; then
            exit 0
          fi
          git pull --rebase origin "$BRANCH"
          git push origin "$BRANCH"
